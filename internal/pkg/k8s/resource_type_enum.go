// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package k8s

import (
	"fmt"
	"strings"
)

const (
	// ResourceTypeNode is a ResourceType of type Node.
	ResourceTypeNode ResourceType = "Node"
	// ResourceTypePod is a ResourceType of type Pod.
	ResourceTypePod ResourceType = "Pod"
	// ResourceTypeService is a ResourceType of type Service.
	ResourceTypeService ResourceType = "Service"
	// ResourceTypeDeployment is a ResourceType of type Deployment.
	ResourceTypeDeployment ResourceType = "Deployment"
	// ResourceTypeStatefulSet is a ResourceType of type StatefulSet.
	ResourceTypeStatefulSet ResourceType = "StatefulSet"
	// ResourceTypeDaemonSet is a ResourceType of type DaemonSet.
	ResourceTypeDaemonSet ResourceType = "DaemonSet"
	// ResourceTypeReplicaSet is a ResourceType of type ReplicaSet.
	ResourceTypeReplicaSet ResourceType = "ReplicaSet"
	// ResourceTypeReplicationController is a ResourceType of type ReplicationController.
	ResourceTypeReplicationController ResourceType = "ReplicationController"
	// ResourceTypePodTemplate is a ResourceType of type PodTemplate.
	ResourceTypePodTemplate ResourceType = "PodTemplate"
	// ResourceTypeConfigMap is a ResourceType of type ConfigMap.
	ResourceTypeConfigMap ResourceType = "ConfigMap"
	// ResourceTypeSecret is a ResourceType of type Secret.
	ResourceTypeSecret ResourceType = "Secret"
	// ResourceTypeServiceAccount is a ResourceType of type ServiceAccount.
	ResourceTypeServiceAccount ResourceType = "ServiceAccount"
	// ResourceTypePersistentVolume is a ResourceType of type PersistentVolume.
	ResourceTypePersistentVolume ResourceType = "PersistentVolume"
	// ResourceTypePersistentVolumeClaim is a ResourceType of type PersistentVolumeClaim.
	ResourceTypePersistentVolumeClaim ResourceType = "PersistentVolumeClaim"
	// ResourceTypeStorageClass is a ResourceType of type StorageClass.
	ResourceTypeStorageClass ResourceType = "StorageClass"
	// ResourceTypeVolumeAttachment is a ResourceType of type VolumeAttachment.
	ResourceTypeVolumeAttachment ResourceType = "VolumeAttachment"
	// ResourceTypeCSIDriver is a ResourceType of type CSIDriver.
	ResourceTypeCSIDriver ResourceType = "CSIDriver"
	// ResourceTypeCSINode is a ResourceType of type CSINode.
	ResourceTypeCSINode ResourceType = "CSINode"
	// ResourceTypeIngress is a ResourceType of type Ingress.
	ResourceTypeIngress ResourceType = "Ingress"
	// ResourceTypeIngressClass is a ResourceType of type IngressClass.
	ResourceTypeIngressClass ResourceType = "IngressClass"
	// ResourceTypeNetworkPolicy is a ResourceType of type NetworkPolicy.
	ResourceTypeNetworkPolicy ResourceType = "NetworkPolicy"
	// ResourceTypeEndpoints is a ResourceType of type Endpoints.
	ResourceTypeEndpoints ResourceType = "Endpoints"
	// ResourceTypeEndpointSlice is a ResourceType of type EndpointSlice.
	ResourceTypeEndpointSlice ResourceType = "EndpointSlice"
	// ResourceTypeLimitRange is a ResourceType of type LimitRange.
	ResourceTypeLimitRange ResourceType = "LimitRange"
	// ResourceTypeResourceQuota is a ResourceType of type ResourceQuota.
	ResourceTypeResourceQuota ResourceType = "ResourceQuota"
	// ResourceTypeEvent is a ResourceType of type Event.
	ResourceTypeEvent ResourceType = "Event"
	// ResourceTypeLease is a ResourceType of type Lease.
	ResourceTypeLease ResourceType = "Lease"
	// ResourceTypeRole is a ResourceType of type Role.
	ResourceTypeRole ResourceType = "Role"
	// ResourceTypeRoleBinding is a ResourceType of type RoleBinding.
	ResourceTypeRoleBinding ResourceType = "RoleBinding"
	// ResourceTypeClusterRole is a ResourceType of type ClusterRole.
	ResourceTypeClusterRole ResourceType = "ClusterRole"
	// ResourceTypeClusterRoleBinding is a ResourceType of type ClusterRoleBinding.
	ResourceTypeClusterRoleBinding ResourceType = "ClusterRoleBinding"
	// ResourceTypeCustomResourceDefinition is a ResourceType of type CustomResourceDefinition.
	ResourceTypeCustomResourceDefinition ResourceType = "CustomResourceDefinition"
	// ResourceTypeHorizontalPodAutoscaler is a ResourceType of type HorizontalPodAutoscaler.
	ResourceTypeHorizontalPodAutoscaler ResourceType = "HorizontalPodAutoscaler"
	// ResourceTypeCronJob is a ResourceType of type CronJob.
	ResourceTypeCronJob ResourceType = "CronJob"
	// ResourceTypeJob is a ResourceType of type Job.
	ResourceTypeJob ResourceType = "Job"
	// ResourceTypePodDisruptionBudget is a ResourceType of type PodDisruptionBudget.
	ResourceTypePodDisruptionBudget ResourceType = "PodDisruptionBudget"
	// ResourceTypePriorityClass is a ResourceType of type PriorityClass.
	ResourceTypePriorityClass ResourceType = "PriorityClass"
)

var ErrInvalidResourceType = fmt.Errorf("not a valid ResourceType, try [%s]", strings.Join(_ResourceTypeNames, ", "))

var _ResourceTypeNames = []string{
	string(ResourceTypeNode),
	string(ResourceTypePod),
	string(ResourceTypeService),
	string(ResourceTypeDeployment),
	string(ResourceTypeStatefulSet),
	string(ResourceTypeDaemonSet),
	string(ResourceTypeReplicaSet),
	string(ResourceTypeReplicationController),
	string(ResourceTypePodTemplate),
	string(ResourceTypeConfigMap),
	string(ResourceTypeSecret),
	string(ResourceTypeServiceAccount),
	string(ResourceTypePersistentVolume),
	string(ResourceTypePersistentVolumeClaim),
	string(ResourceTypeStorageClass),
	string(ResourceTypeVolumeAttachment),
	string(ResourceTypeCSIDriver),
	string(ResourceTypeCSINode),
	string(ResourceTypeIngress),
	string(ResourceTypeIngressClass),
	string(ResourceTypeNetworkPolicy),
	string(ResourceTypeEndpoints),
	string(ResourceTypeEndpointSlice),
	string(ResourceTypeLimitRange),
	string(ResourceTypeResourceQuota),
	string(ResourceTypeEvent),
	string(ResourceTypeLease),
	string(ResourceTypeRole),
	string(ResourceTypeRoleBinding),
	string(ResourceTypeClusterRole),
	string(ResourceTypeClusterRoleBinding),
	string(ResourceTypeCustomResourceDefinition),
	string(ResourceTypeHorizontalPodAutoscaler),
	string(ResourceTypeCronJob),
	string(ResourceTypeJob),
	string(ResourceTypePodDisruptionBudget),
	string(ResourceTypePriorityClass),
}

// ResourceTypeNames returns a list of possible string values of ResourceType.
func ResourceTypeNames() []string {
	tmp := make([]string, len(_ResourceTypeNames))
	copy(tmp, _ResourceTypeNames)
	return tmp
}

// String implements the Stringer interface.
func (x ResourceType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ResourceType) IsValid() bool {
	_, err := ParseResourceType(string(x))
	return err == nil
}

var _ResourceTypeValue = map[string]ResourceType{
	"Node":                     ResourceTypeNode,
	"node":                     ResourceTypeNode,
	"Pod":                      ResourceTypePod,
	"pod":                      ResourceTypePod,
	"Service":                  ResourceTypeService,
	"service":                  ResourceTypeService,
	"Deployment":               ResourceTypeDeployment,
	"deployment":               ResourceTypeDeployment,
	"StatefulSet":              ResourceTypeStatefulSet,
	"statefulset":              ResourceTypeStatefulSet,
	"DaemonSet":                ResourceTypeDaemonSet,
	"daemonset":                ResourceTypeDaemonSet,
	"ReplicaSet":               ResourceTypeReplicaSet,
	"replicaset":               ResourceTypeReplicaSet,
	"ReplicationController":    ResourceTypeReplicationController,
	"replicationcontroller":    ResourceTypeReplicationController,
	"PodTemplate":              ResourceTypePodTemplate,
	"podtemplate":              ResourceTypePodTemplate,
	"ConfigMap":                ResourceTypeConfigMap,
	"configmap":                ResourceTypeConfigMap,
	"Secret":                   ResourceTypeSecret,
	"secret":                   ResourceTypeSecret,
	"ServiceAccount":           ResourceTypeServiceAccount,
	"serviceaccount":           ResourceTypeServiceAccount,
	"PersistentVolume":         ResourceTypePersistentVolume,
	"persistentvolume":         ResourceTypePersistentVolume,
	"PersistentVolumeClaim":    ResourceTypePersistentVolumeClaim,
	"persistentvolumeclaim":    ResourceTypePersistentVolumeClaim,
	"StorageClass":             ResourceTypeStorageClass,
	"storageclass":             ResourceTypeStorageClass,
	"VolumeAttachment":         ResourceTypeVolumeAttachment,
	"volumeattachment":         ResourceTypeVolumeAttachment,
	"CSIDriver":                ResourceTypeCSIDriver,
	"csidriver":                ResourceTypeCSIDriver,
	"CSINode":                  ResourceTypeCSINode,
	"csinode":                  ResourceTypeCSINode,
	"Ingress":                  ResourceTypeIngress,
	"ingress":                  ResourceTypeIngress,
	"IngressClass":             ResourceTypeIngressClass,
	"ingressclass":             ResourceTypeIngressClass,
	"NetworkPolicy":            ResourceTypeNetworkPolicy,
	"networkpolicy":            ResourceTypeNetworkPolicy,
	"Endpoints":                ResourceTypeEndpoints,
	"endpoints":                ResourceTypeEndpoints,
	"EndpointSlice":            ResourceTypeEndpointSlice,
	"endpointslice":            ResourceTypeEndpointSlice,
	"LimitRange":               ResourceTypeLimitRange,
	"limitrange":               ResourceTypeLimitRange,
	"ResourceQuota":            ResourceTypeResourceQuota,
	"resourcequota":            ResourceTypeResourceQuota,
	"Event":                    ResourceTypeEvent,
	"event":                    ResourceTypeEvent,
	"Lease":                    ResourceTypeLease,
	"lease":                    ResourceTypeLease,
	"Role":                     ResourceTypeRole,
	"role":                     ResourceTypeRole,
	"RoleBinding":              ResourceTypeRoleBinding,
	"rolebinding":              ResourceTypeRoleBinding,
	"ClusterRole":              ResourceTypeClusterRole,
	"clusterrole":              ResourceTypeClusterRole,
	"ClusterRoleBinding":       ResourceTypeClusterRoleBinding,
	"clusterrolebinding":       ResourceTypeClusterRoleBinding,
	"CustomResourceDefinition": ResourceTypeCustomResourceDefinition,
	"customresourcedefinition": ResourceTypeCustomResourceDefinition,
	"HorizontalPodAutoscaler":  ResourceTypeHorizontalPodAutoscaler,
	"horizontalpodautoscaler":  ResourceTypeHorizontalPodAutoscaler,
	"CronJob":                  ResourceTypeCronJob,
	"cronjob":                  ResourceTypeCronJob,
	"Job":                      ResourceTypeJob,
	"job":                      ResourceTypeJob,
	"PodDisruptionBudget":      ResourceTypePodDisruptionBudget,
	"poddisruptionbudget":      ResourceTypePodDisruptionBudget,
	"PriorityClass":            ResourceTypePriorityClass,
	"priorityclass":            ResourceTypePriorityClass,
}

// ParseResourceType attempts to convert a string to a ResourceType.
func ParseResourceType(name string) (ResourceType, error) {
	if x, ok := _ResourceTypeValue[name]; ok {
		return x, nil
	}
	// Case insensitive parse, do a separate lookup to prevent unnecessary cost of lowercasing a string if we don't need to.
	if x, ok := _ResourceTypeValue[strings.ToLower(name)]; ok {
		return x, nil
	}
	return ResourceType(""), fmt.Errorf("%s is %w", name, ErrInvalidResourceType)
}

// MustParseResourceType converts a string to a ResourceType, and panics if is not valid.
func MustParseResourceType(name string) ResourceType {
	val, err := ParseResourceType(name)
	if err != nil {
		panic(err)
	}
	return val
}

func (x ResourceType) Ptr() *ResourceType {
	return &x
}

// MarshalText implements the text marshaller method.
func (x ResourceType) MarshalText() ([]byte, error) {
	return []byte(string(x)), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *ResourceType) UnmarshalText(text []byte) error {
	tmp, err := ParseResourceType(string(text))
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

// Set implements the Golang flag.Value interface func.
func (x *ResourceType) Set(val string) error {
	v, err := ParseResourceType(val)
	*x = v
	return err
}

// Get implements the Golang flag.Getter interface func.
func (x *ResourceType) Get() interface{} {
	return *x
}

// Type implements the github.com/spf13/pFlag Value interface.
func (x *ResourceType) Type() string {
	return "ResourceType"
}
